import groovy.swing.SwingBuilder
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

project.ext {
    versionCode = 17
    versionName = "2.0.1"
    jodelVersionCode = 1000050
    jodelVersionName = "4.21.1"
}

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"

    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
    defaultConfig {
        applicationId "com.jodelXposed"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode project.versionCode
        versionName project.versionName
        buildConfigField "int", "JODEL_VERSION_CODE", project.jodelVersionCode.toString()
        buildConfigField "String", "JODEL_VERSION_NAME", '"' + project.jodelVersionName + '"'
    }
    signingConfigs {
        release {
            storeFile file("jodelxposed.keystore")
            keyAlias "JodelXposed"
            storePassword ''
            keyPassword ''
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.resources.srcDirs += '../hooks'
    }
}

dependencies {
    provided 'de.robv.android.xposed:api:82'
    provided 'de.robv.android.xposed:api:82:sources'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'commons-io:commons-io:2.4'
    compile 'com.schibstedspain.android:leku:2.2.0'
    compile 'com.google.android.gms:play-services-maps:9.4.0'
    compile 'com.google.android.gms:play-services-location:9.4.0'
    compile 'com.squareup.moshi:moshi:1.2.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.androidadvance:topsnackbar:1.1.1'
    compile 'com.github.machinarius:preferencefragment:0.1.1'
    compile 'com.github.renaudcerrato:static-maps-api:1.0.2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'id.zelory:compressor:1.0.3'
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':app:assembleRelease')) {
        def storePass = ''
        def keyPass = ''
        if(System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, title: 'Enter password', alwaysOnTop: true, resizable: false, locationRelativeTo: null, pack: true, show: true) {
                    vbox { // Put everything below each other
                        label(text: "Please enter store passphrase:")
                        def input1 = passwordField()
                        label(text: "Please enter key passphrase:")
                        def input2 = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            storePass = input1.password;
                            keyPass = input2.password;
                            dispose();
                        })
                    }
                }
            }
        } else {
            storePass = System.console().readPassword("\nPlease enter store passphrase: ")
            keyPass = System.console().readPassword("\nPlease enter key passphrase: ")
        }

        if(storePass.size() <= 0 || keyPass.size() <= 0) {
            throw new InvalidUserDataException("You must enter the passwords to proceed.")
        }

        storePass = new String(storePass)
        keyPass = new String(keyPass)

        android.signingConfigs.release.storePassword = storePass
        android.signingConfigs.release.keyPassword = keyPass
    }
}